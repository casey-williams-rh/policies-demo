// Generated from utils/expression/Expression.g4 by ANTLR 4.7.3-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class ExpressionLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly OR = 6;
	public static readonly AND = 7;
	public static readonly NOT = 8;
	public static readonly EQUAL = 9;
	public static readonly NOTEQUAL = 10;
	public static readonly CONTAINS = 11;
	public static readonly MATCHES = 12;
	public static readonly NEG = 13;
	public static readonly GT = 14;
	public static readonly GTE = 15;
	public static readonly LT = 16;
	public static readonly LTE = 17;
	public static readonly IN = 18;
	public static readonly QUOTED_NUMBER = 19;
	public static readonly NUMBER = 20;
	public static readonly FLOAT = 21;
	public static readonly INTEGER = 22;
	public static readonly SIMPLETEXT = 23;
	public static readonly STRING = 24;
	public static readonly WS = 25;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "OR", "AND", "NOT", "EQUAL", "NOTEQUAL", 
		"CONTAINS", "MATCHES", "NEG", "GT", "GTE", "LT", "LTE", "IN", "QUOTED_NUMBER", 
		"NUMBER", "FLOAT", "INTEGER", "SIMPLETEXT", "STRING", "WS", "ESC", "UNICODE", 
		"HEX", "ESC_DOT", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", 
		"L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", 
		"Z", "NEG_OP",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'('", "')'", "'['", "','", "']'", undefined, undefined, undefined, 
		"'='", "'!='", undefined, undefined, undefined, "'>'", "'>='", "'<'", 
		"'<='",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, "OR", 
		"AND", "NOT", "EQUAL", "NOTEQUAL", "CONTAINS", "MATCHES", "NEG", "GT", 
		"GTE", "LT", "LTE", "IN", "QUOTED_NUMBER", "NUMBER", "FLOAT", "INTEGER", 
		"SIMPLETEXT", "STRING", "WS",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(ExpressionLexer._LITERAL_NAMES, ExpressionLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return ExpressionLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(ExpressionLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "Expression.g4"; }

	// @Override
	public get ruleNames(): string[] { return ExpressionLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return ExpressionLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return ExpressionLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return ExpressionLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02\x1B\u012F\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04" +
		"+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x042\t2\x043\t3\x04" +
		"4\t4\x045\t5\x046\t6\x047\t7\x048\t8\x049\t9\x03\x02\x03\x02\x03\x03\x03" +
		"\x03\x03\x04\x03\x04\x03\x05\x03\x05\x03\x06\x03\x06\x03\x07\x03\x07\x03" +
		"\x07\x03\b\x03\b\x03\b\x03\b\x03\t\x03\t\x03\t\x03\t\x03\n\x03\n\x03\v" +
		"\x03\v\x03\v\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03" +
		"\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0F\x03" +
		"\x0F\x03\x10\x03\x10\x03\x10\x03\x11\x03\x11\x03\x12\x03\x12\x03\x12\x03" +
		"\x13\x03\x13\x03\x13\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03" +
		"\x14\x03\x14\x05\x14\xB6\n\x14\x03\x15\x03\x15\x03\x15\x05\x15\xBB\n\x15" +
		"\x03\x16\x03\x16\x03\x16\x03\x16\x03\x17\x06\x17\xC2\n\x17\r\x17\x0E\x17" +
		"\xC3\x03\x18\x03\x18\x03\x18\x07\x18\xC9\n\x18\f\x18\x0E\x18\xCC\v\x18" +
		"\x03\x19\x03\x19\x03\x19\x07\x19\xD1\n\x19\f\x19\x0E\x19\xD4\v\x19\x03" +
		"\x19\x03\x19\x03\x19\x03\x19\x07\x19\xDA\n\x19\f\x19\x0E\x19\xDD\v\x19" +
		"\x03\x19\x05\x19\xE0\n\x19\x03\x1A\x06\x1A\xE3\n\x1A\r\x1A\x0E\x1A\xE4" +
		"\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x05\x1B\xED\n\x1B\x03" +
		"\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1E\x03" +
		"\x1E\x03\x1E\x03\x1F\x03\x1F\x03 \x03 \x03!\x03!\x03\"\x03\"\x03#\x03" +
		"#\x03$\x03$\x03%\x03%\x03&\x03&\x03\'\x03\'\x03(\x03(\x03)\x03)\x03*\x03" +
		"*\x03+\x03+\x03,\x03,\x03-\x03-\x03.\x03.\x03/\x03/\x030\x030\x031\x03" +
		"1\x032\x032\x033\x033\x034\x034\x035\x035\x036\x036\x037\x037\x038\x03" +
		"8\x039\x039\x02\x02\x02:\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06" +
		"\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19" +
		"\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14" +
		"\'\x02\x15)\x02\x16+\x02\x17-\x02\x18/\x02\x191\x02\x1A3\x02\x1B5\x02" +
		"\x027\x02\x029\x02\x02;\x02\x02=\x02\x02?\x02\x02A\x02\x02C\x02\x02E\x02" +
		"\x02G\x02\x02I\x02\x02K\x02\x02M\x02\x02O\x02\x02Q\x02\x02S\x02\x02U\x02" +
		"\x02W\x02\x02Y\x02\x02[\x02\x02]\x02\x02_\x02\x02a\x02\x02c\x02\x02e\x02" +
		"\x02g\x02\x02i\x02\x02k\x02\x02m\x02\x02o\x02\x02q\x02\x02\x03\x02$\x03" +
		"\x022;\x07\x02002;C\\aac|\x07\x02/02;C\\aac|\x04\x02))^^\x04\x02$$^^\x05" +
		"\x02\v\f\x0F\x0F\"\"\n\x02))11^^ddhhppttvv\x05\x022;CHch\x04\x02CCcc\x04" +
		"\x02DDdd\x04\x02EEee\x04\x02FFff\x04\x02GGgg\x04\x02HHhh\x04\x02IIii\x04" +
		"\x02JJjj\x04\x02KKkk\x04\x02LLll\x04\x02MMmm\x04\x02NNnn\x04\x02OOoo\x04" +
		"\x02PPpp\x04\x02QQqq\x04\x02RRrr\x04\x02SSss\x04\x02TTtt\x04\x02UUuu\x04" +
		"\x02VVvv\x04\x02WWww\x04\x02XXxx\x04\x02YYyy\x04\x02ZZzz\x04\x02[[{{\x04" +
		"\x02\\\\||\x02\u011C\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02" +
		"\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r" +
		"\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13" +
		"\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19" +
		"\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F" +
		"\x03\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02" +
		"\x02\x02\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02" +
		"\x02-\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03" +
		"\x02\x02\x02\x03s\x03\x02\x02\x02\x05u\x03\x02\x02\x02\x07w\x03\x02\x02" +
		"\x02\ty\x03\x02\x02\x02\v{\x03\x02\x02\x02\r}\x03\x02\x02\x02\x0F\x80" +
		"\x03\x02\x02\x02\x11\x84\x03\x02\x02\x02\x13\x88\x03\x02\x02\x02\x15\x8A" +
		"\x03\x02\x02\x02\x17\x8D\x03\x02\x02\x02\x19\x96\x03\x02\x02\x02\x1B\x9E" +
		"\x03\x02\x02\x02\x1D\xA0\x03\x02\x02\x02\x1F\xA2\x03\x02\x02\x02!\xA5" +
		"\x03\x02\x02\x02#\xA7\x03\x02\x02\x02%\xAA\x03\x02\x02\x02\'\xB5\x03\x02" +
		"\x02\x02)\xB7\x03\x02\x02\x02+\xBC\x03\x02\x02\x02-\xC1\x03\x02\x02\x02" +
		"/\xC5\x03\x02\x02\x021\xDF\x03\x02\x02\x023\xE2\x03\x02\x02\x025\xE8\x03" +
		"\x02\x02\x027\xEE\x03\x02\x02\x029\xF4\x03\x02\x02\x02;\xF6\x03\x02\x02" +
		"\x02=\xF9\x03\x02\x02\x02?\xFB\x03\x02\x02\x02A\xFD\x03\x02\x02\x02C\xFF" +
		"\x03\x02\x02\x02E\u0101\x03\x02\x02\x02G\u0103\x03\x02\x02\x02I\u0105" +
		"\x03\x02\x02\x02K\u0107\x03\x02\x02\x02M\u0109\x03\x02\x02\x02O\u010B" +
		"\x03\x02\x02\x02Q\u010D\x03\x02\x02\x02S\u010F\x03\x02\x02\x02U\u0111" +
		"\x03\x02\x02\x02W\u0113\x03\x02\x02\x02Y\u0115\x03\x02\x02\x02[\u0117" +
		"\x03\x02\x02\x02]\u0119\x03\x02\x02\x02_\u011B\x03\x02\x02\x02a\u011D" +
		"\x03\x02\x02\x02c\u011F\x03\x02\x02\x02e\u0121\x03\x02\x02\x02g\u0123" +
		"\x03\x02\x02\x02i\u0125\x03\x02\x02\x02k\u0127\x03\x02\x02\x02m\u0129" +
		"\x03\x02\x02\x02o\u012B\x03\x02\x02\x02q\u012D\x03\x02\x02\x02st\x07*" +
		"\x02\x02t\x04\x03\x02\x02\x02uv\x07+\x02\x02v\x06\x03\x02\x02\x02wx\x07" +
		"]\x02\x02x\b\x03\x02\x02\x02yz\x07.\x02\x02z\n\x03\x02\x02\x02{|\x07_" +
		"\x02\x02|\f\x03\x02\x02\x02}~\x05Y-\x02~\x7F\x05_0\x02\x7F\x0E\x03\x02" +
		"\x02\x02\x80\x81\x05=\x1F\x02\x81\x82\x05W,\x02\x82\x83\x05C\"\x02\x83" +
		"\x10\x03\x02\x02\x02\x84\x85\x05W,\x02\x85\x86\x05Y-\x02\x86\x87\x05c" +
		"2\x02\x87\x12\x03\x02\x02\x02\x88\x89\x07?\x02\x02\x89\x14\x03\x02\x02" +
		"\x02\x8A\x8B\x07#\x02\x02\x8B\x8C\x07?\x02\x02\x8C\x16\x03\x02\x02\x02" +
		"\x8D\x8E\x05A!\x02\x8E\x8F\x05Y-\x02\x8F\x90\x05W,\x02\x90\x91\x05c2\x02" +
		"\x91\x92\x05=\x1F\x02\x92\x93\x05M\'\x02\x93\x94\x05W,\x02\x94\x95\x05" +
		"a1\x02\x95\x18\x03\x02\x02\x02\x96\x97\x05U+\x02\x97\x98\x05=\x1F\x02" +
		"\x98\x99\x05c2\x02\x99\x9A\x05A!\x02\x9A\x9B\x05K&\x02\x9B\x9C\x05E#\x02" +
		"\x9C\x9D\x05a1\x02\x9D\x1A\x03\x02\x02\x02\x9E\x9F\x05q9\x02\x9F\x1C\x03" +
		"\x02\x02\x02\xA0\xA1\x07@\x02\x02\xA1\x1E\x03\x02\x02\x02\xA2\xA3\x07" +
		"@\x02\x02\xA3\xA4\x07?\x02\x02\xA4 \x03\x02\x02\x02\xA5\xA6\x07>\x02\x02" +
		"\xA6\"\x03\x02\x02\x02\xA7\xA8\x07>\x02\x02\xA8\xA9\x07?\x02\x02\xA9$" +
		"\x03\x02\x02\x02\xAA\xAB\x05M\'\x02\xAB\xAC\x05W,\x02\xAC&\x03\x02\x02" +
		"\x02\xAD\xAE\x07)\x02\x02\xAE\xAF\x05)\x15\x02\xAF\xB0\x07)\x02\x02\xB0" +
		"\xB6\x03\x02\x02\x02\xB1\xB2\x07$\x02\x02\xB2\xB3\x05)\x15\x02\xB3\xB4" +
		"\x07$\x02\x02\xB4\xB6\x03\x02\x02\x02\xB5\xAD\x03\x02\x02\x02\xB5\xB1" +
		"\x03\x02\x02\x02\xB6(\x03\x02\x02\x02\xB7\xBA\x05-\x17\x02\xB8\xB9\x07" +
		"0\x02\x02\xB9\xBB\x05-\x17\x02\xBA\xB8\x03\x02\x02\x02\xBA\xBB\x03\x02" +
		"\x02\x02\xBB*\x03\x02\x02\x02\xBC\xBD\x05-\x17\x02\xBD\xBE\x070\x02\x02" +
		"\xBE\xBF\x05-\x17\x02\xBF,\x03\x02\x02\x02\xC0\xC2\t\x02\x02\x02\xC1\xC0" +
		"\x03\x02\x02\x02\xC2\xC3\x03\x02\x02\x02\xC3\xC1\x03\x02\x02\x02\xC3\xC4" +
		"\x03\x02\x02\x02\xC4.\x03\x02\x02\x02\xC5\xCA\t\x03\x02\x02\xC6\xC9\t" +
		"\x04\x02\x02\xC7\xC9\x05;\x1E\x02\xC8\xC6\x03\x02\x02\x02\xC8\xC7\x03" +
		"\x02\x02\x02\xC9\xCC\x03\x02\x02\x02\xCA\xC8\x03\x02\x02\x02\xCA\xCB\x03" +
		"\x02\x02\x02\xCB0\x03\x02\x02\x02\xCC\xCA\x03\x02\x02\x02\xCD\xD2\x07" +
		")\x02\x02\xCE\xD1\x055\x1B\x02\xCF\xD1\n\x05\x02\x02\xD0\xCE\x03\x02\x02" +
		"\x02\xD0\xCF\x03\x02\x02\x02\xD1\xD4\x03\x02\x02\x02\xD2\xD0\x03\x02\x02" +
		"\x02\xD2\xD3\x03\x02\x02\x02\xD3\xD5\x03\x02\x02\x02\xD4\xD2\x03\x02\x02" +
		"\x02\xD5\xE0\x07)\x02\x02\xD6\xDB\x07$\x02\x02\xD7\xDA\x055\x1B\x02\xD8" +
		"\xDA\n\x06\x02\x02\xD9\xD7\x03\x02\x02\x02\xD9\xD8\x03\x02\x02\x02\xDA" +
		"\xDD\x03\x02\x02\x02\xDB\xD9\x03\x02\x02\x02\xDB\xDC\x03\x02\x02\x02\xDC" +
		"\xDE\x03\x02\x02\x02\xDD\xDB\x03\x02\x02\x02\xDE\xE0\x07$\x02\x02\xDF" +
		"\xCD\x03\x02\x02\x02\xDF\xD6\x03\x02\x02\x02\xE02\x03\x02\x02\x02\xE1" +
		"\xE3\t\x07\x02\x02\xE2\xE1\x03\x02\x02\x02\xE3\xE4\x03\x02\x02\x02\xE4" +
		"\xE2\x03\x02\x02\x02\xE4\xE5\x03\x02\x02\x02\xE5\xE6\x03\x02\x02\x02\xE6" +
		"\xE7\b\x1A\x02\x02\xE74\x03\x02\x02\x02\xE8\xEC\x07^\x02\x02\xE9\xED\t" +
		"\b\x02\x02\xEA\xED\x057\x1C\x02\xEB\xED\x05q9\x02\xEC\xE9\x03\x02\x02" +
		"\x02\xEC\xEA\x03\x02\x02\x02\xEC\xEB\x03\x02\x02\x02\xED6\x03\x02\x02" +
		"\x02\xEE\xEF\x07w\x02\x02\xEF\xF0\x059\x1D\x02\xF0\xF1\x059\x1D\x02\xF1" +
		"\xF2\x059\x1D\x02\xF2\xF3\x059\x1D\x02\xF38\x03\x02\x02\x02\xF4\xF5\t" +
		"\t\x02\x02\xF5:\x03\x02\x02\x02\xF6\xF7\x07^\x02\x02\xF7\xF8\x070\x02" +
		"\x02\xF8<\x03\x02\x02\x02\xF9\xFA\t\n\x02\x02\xFA>\x03\x02\x02\x02\xFB" +
		"\xFC\t\v\x02\x02\xFC@\x03\x02\x02\x02\xFD\xFE\t\f\x02\x02\xFEB\x03\x02" +
		"\x02\x02\xFF\u0100\t\r\x02\x02\u0100D\x03\x02\x02\x02\u0101\u0102\t\x0E" +
		"\x02\x02\u0102F\x03\x02\x02\x02\u0103\u0104\t\x0F\x02\x02\u0104H\x03\x02" +
		"\x02\x02\u0105\u0106\t\x10\x02\x02\u0106J\x03\x02\x02\x02\u0107\u0108" +
		"\t\x11\x02\x02\u0108L\x03\x02\x02\x02\u0109\u010A\t\x12\x02\x02\u010A" +
		"N\x03\x02\x02\x02\u010B\u010C\t\x13\x02\x02\u010CP\x03\x02\x02\x02\u010D" +
		"\u010E\t\x14\x02\x02\u010ER\x03\x02\x02\x02\u010F\u0110\t\x15\x02\x02" +
		"\u0110T\x03\x02\x02\x02\u0111\u0112\t\x16\x02\x02\u0112V\x03\x02\x02\x02" +
		"\u0113\u0114\t\x17\x02\x02\u0114X\x03\x02\x02\x02\u0115\u0116\t\x18\x02" +
		"\x02\u0116Z\x03\x02\x02\x02\u0117\u0118\t\x19\x02\x02\u0118\\\x03\x02" +
		"\x02\x02\u0119\u011A\t\x1A\x02\x02\u011A^\x03\x02\x02\x02\u011B\u011C" +
		"\t\x1B\x02\x02\u011C`\x03\x02\x02\x02\u011D\u011E\t\x1C\x02\x02\u011E" +
		"b\x03\x02\x02\x02\u011F\u0120\t\x1D\x02\x02\u0120d\x03\x02\x02\x02\u0121" +
		"\u0122\t\x1E\x02\x02\u0122f\x03\x02\x02\x02\u0123\u0124\t\x1F\x02\x02" +
		"\u0124h\x03\x02\x02\x02\u0125\u0126\t \x02\x02\u0126j\x03\x02\x02\x02" +
		"\u0127\u0128\t!\x02\x02\u0128l\x03\x02\x02\x02\u0129\u012A\t\"\x02\x02" +
		"\u012An\x03\x02\x02\x02\u012B\u012C\t#\x02\x02\u012Cp\x03\x02\x02\x02" +
		"\u012D\u012E\x07#\x02\x02\u012Er\x03\x02\x02\x02\x0F\x02\xB5\xBA\xC3\xC8" +
		"\xCA\xD0\xD2\xD9\xDB\xDF\xE4\xEC\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!ExpressionLexer.__ATN) {
			ExpressionLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(ExpressionLexer._serializedATN));
		}

		return ExpressionLexer.__ATN;
	}

}

